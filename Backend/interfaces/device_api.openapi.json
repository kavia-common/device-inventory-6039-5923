{
  "openapi": "3.0.3",
  "info": {
    "title": "Device Management REST API",
    "version": "1.0.0",
    "description": "RESTful API for managing network devices. Supports CRUD operations, enforces unique device names, and provides standardized JSON responses. No authentication required."
  },
  "servers": [{ "url": "http://localhost:5000", "description": "Local development server" }],
  "paths": {
    "/devices": {
      "get": {
        "summary": "List all devices",
        "tags": ["Devices"],
        "responses": {
          "200": { "description": "A list of devices", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeviceList" } } } },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "post": {
        "summary": "Add a new device",
        "tags": ["Devices"],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeviceCreate" } } } },
        "responses": {
          "201": { "description": "Device created successfully", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Device" } } } },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "409": { "$ref": "#/components/responses/Conflict" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/devices/{name}": {
      "get": {
        "summary": "Get device by name",
        "tags": ["Devices"],
        "parameters": [{ "name": "name", "in": "path", "required": true, "schema": { "type": "string" }, "description": "Unique device name" }],
        "responses": {
          "200": { "description": "Device details", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Device" } } } },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "put": {
        "summary": "Update device by name",
        "tags": ["Devices"],
        "parameters": [{ "name": "name", "in": "path", "required": true, "schema": { "type": "string" }, "description": "Unique device name" }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeviceUpdate" } } } },
        "responses": {
          "200": { "description": "Device updated successfully", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Device" } } } },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "delete": {
        "summary": "Delete device by name",
        "tags": ["Devices"],
        "parameters": [{ "name": "name", "in": "path", "required": true, "schema": { "type": "string" }, "description": "Unique device name" }],
        "responses": {
          "200": { "description": "Device deleted successfully", "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" } } } } } },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Device": {
        "type": "object",
        "required": ["name", "ip_address", "type", "location"],
        "properties": {
          "name": { "type": "string", "description": "Unique device name" },
          "ip_address": { "type": "string", "format": "ipv4", "description": "Device IP address" },
          "type": { "type": "string", "enum": ["Router", "Switch", "Server"], "description": "Device type" },
          "location": { "type": "string", "description": "Device location" }
        }
      },
      "DeviceCreate": {
        "type": "object",
        "required": ["name", "ip_address", "type", "location"],
        "properties": {
          "name": { "type": "string" },
          "ip_address": { "type": "string", "format": "ipv4" },
          "type": { "type": "string", "enum": ["Router", "Switch", "Server"] },
          "location": { "type": "string" }
        }
      },
      "DeviceUpdate": {
        "type": "object",
        "required": ["ip_address", "type", "location"],
        "properties": {
          "ip_address": { "type": "string", "format": "ipv4" },
          "type": { "type": "string", "enum": ["Router", "Switch", "Server"] },
          "location": { "type": "string" }
        }
      },
      "DeviceList": {
        "type": "array",
        "items": { "$ref": "#/components/schemas/Device" }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": { "type": "string" },
              "message": { "type": "string" }
            },
            "required": ["code", "message"]
          }
        },
        "required": ["error"]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Invalid input or validation error",
        "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
      },
      "Conflict": {
        "description": "Duplicate resource (e.g., device name conflict)",
        "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
      },
      "InternalServerError": {
        "description": "Unexpected server error",
        "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
      }
    }
  },
  "security": [],
  "tags": [{ "name": "Devices", "description": "Operations related to network devices" }]
}
