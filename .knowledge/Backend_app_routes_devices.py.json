{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for managing 'devices' in a network inventory system using Flask and MongoDB. It includes classes and methods for CRUD operations on device resources, with schema validation and error handling.", "external_files": ["../db", "../schemas", "../errors"], "external_methods": ["get_mongo_collection", "error_response"], "published": ["blp"], "classes": [{"name": "DevicesCollection", "description": "Handles collection-level endpoints (/devices) for listing and creating devices."}, {"name": "DeviceItem", "description": "Handles item-level endpoints (/devices/<name>) for retrieving, updating, and deleting a specific device."}], "methods": [{"name": "get(self)", "description": "Lists all devices in the collection.", "scope": "DevicesCollection", "scopeKind": "class"}, {"name": "post(self)", "description": "Creates a new device with provided JSON data.", "scope": "DevicesCollection", "scopeKind": "class"}, {"name": "get(self, name: str)", "description": "Retrieves a device by its name.", "scope": "DeviceItem", "scopeKind": "class"}, {"name": "put(self, name: str)", "description": "Updates an existing device identified by name.", "scope": "DeviceItem", "scopeKind": "class"}, {"name": "delete(self, name: str)", "description": "Deletes a device by its name.", "scope": "DeviceItem", "scopeKind": "class"}], "calls": ["get_mongo_collection()", "error_response()", "collection.find()", "collection.find_one()", "collection.insert_one()", "collection.update_one()", "collection.delete_one()"], "search-terms": ["devices API", "Flask REST endpoints for /devices", "Device CRUD operations", "MongoDB device collection", "Device schemas validation", "devices.py Flask route"], "state": 2, "file_id": 10, "knowledge_revision": 31, "git_revision": "e53fe7824004b5b677a1c15dc28c34d9e2bc1f13", "revision_history": [{"21": ""}, {"31": "e53fe7824004b5b677a1c15dc28c34d9e2bc1f13"}], "ctags": [{"_type": "tag", "name": "DeviceItem", "path": "/home/kavia/workspace/code-generation/device-inventory-6039-5923/Backend/app/routes/devices.py", "pattern": "/^class DeviceItem(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DevicesCollection", "path": "/home/kavia/workspace/code-generation/device-inventory-6039-5923/Backend/app/routes/devices.py", "pattern": "/^class DevicesCollection(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/device-inventory-6039-5923/Backend/app/routes/devices.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/device-inventory-6039-5923/Backend/app/routes/devices.py", "pattern": "/^    def delete(self, name: str):$/", "language": "Python", "kind": "member", "signature": "(self, name: str)", "scope": "DeviceItem", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/device-inventory-6039-5923/Backend/app/routes/devices.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DevicesCollection", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/device-inventory-6039-5923/Backend/app/routes/devices.py", "pattern": "/^    def get(self, name: str):$/", "language": "Python", "kind": "member", "signature": "(self, name: str)", "scope": "DeviceItem", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/device-inventory-6039-5923/Backend/app/routes/devices.py", "pattern": "/^    def post(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DevicesCollection", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/device-inventory-6039-5923/Backend/app/routes/devices.py", "pattern": "/^    def put(self, name: str):$/", "language": "Python", "kind": "member", "signature": "(self, name: str)", "scope": "DeviceItem", "scopeKind": "class"}], "hash": "ad533d2451081f55f45a6c258c1d75ad", "format-version": 4, "code-base-name": "Backend", "filename": "Backend/app/routes/devices.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}]}