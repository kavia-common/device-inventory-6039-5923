{"is_source_file": true, "format": "Python", "description": "This file provides a utility function to connect to a MongoDB database, retrieve a specific collection, and ensure a unique index on the 'name' field. It sets up external dependencies, environment variable configurations, and encapsulates the process of establishing a MongoDB connection for device inventory management.", "external_files": ["pymongo", "os"], "external_methods": ["os.getenv", "pymongo.MongoClient", "collection.create_index"], "published": ["get_mongo_collection"], "classes": [], "methods": [{"name": "Tuple[MongoClient,Collection] get_mongo_collection()", "description": "Returns a tuple containing a MongoClient instance and a collection object for the specified device inventory collection, creating an index on 'name' to ensure uniqueness.", "scope": "", "scopeKind": ""}], "calls": ["os.getenv", "MongoClient", "collection.create_index"], "search-terms": ["get_mongo_collection", "MongoClient", "create_index", "device_inventory", "MONGODB_URI"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "get_mongo_collection", "path": "/home/kavia/workspace/code-generation/device-inventory-6039-5923/Backend/app/db.py", "pattern": "/^def get_mongo_collection() -> Tuple[MongoClient, Collection]:$/", "language": "Python", "typeref": "typename:Tuple[MongoClient,Collection]", "kind": "function", "signature": "()"}], "hash": "cce52763bb7e67bf8a1ca6d8883a5043", "format-version": 4, "code-base-name": "Backend", "filename": "Backend/app/db.py", "revision_history": [{"15": ""}]}